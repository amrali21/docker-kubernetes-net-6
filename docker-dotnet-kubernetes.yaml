apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: server
  name: server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: server
  strategy: {}
  template:
    metadata:
      labels:
        service: server
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -zv db-0.db3.default.svc.cluster.local 5432; do echo "waiting for db"; sleep 2; done;']
      containers:
        - image: amrali21/docker-kubernetes-net-6
          name: server
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              hostPort: 8080
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: db
  name: db
  namespace: default
spec:
  serviceName: "db3"
  replicas: 1
  selector:
    matchLabels:
      service: db
  # strategy:
  #   type: Recreate
  template:
    metadata:
      labels:
        service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: example
            - name: POSTGRES_PASSWORD
              value: example
          image: postgres
          name: db
          ports:
            - containerPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
          - name: www
            mountPath: /var/lib/postgresql/data
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
# status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: server
  name: server
  namespace: default
spec:
  type: NodePort
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
      nodePort: 30001
  selector:
    service: server
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: db
  name: db3
  namespace: default
spec:
  ports:
    - name: "5432"
      port: 5432
      # targetPort: 5432
  clusterIP: "None"
  selector:
    service: db
# status:
  # loadBalancer: {}